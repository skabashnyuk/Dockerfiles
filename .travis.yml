env:
  global:
  - secure: Nzd6Sb4bY/AZ1E1uSzhGxvsmB0GqaqFMmFLJIflhmDrm8tQ9XClUXa2YUYlKixqI6ld/h5KeV20BmmaMKZ41cTr28d8LU8YHAcr2cav5n5+9UVkKArKHsu26mmG3PzzKBQ32KSRzZEyspp6PlsidSeP389R8s0WfJzkHOzUrDCBVWrOof3CYoLhJh8V5rxgAcllH6KRuU7CJVYhFCmkgsoW1hZJRphHImE4o3w5AE33XY3K1fomocL1sjEwFnX1y+vLyyf2LcLisnb32wGMs4mYNoR6T8TxeRRlVGYSxr9fmkaQfJTX4OLIqVRVQ5lKNhCASjOE2jpznI13CEQOHcJjigHckh7+fTseyZckTP/yZF/oGmwIcim2eCdxHwcS+wO3YCtmNasvgGL9OlC+6T/09UPpOMN8evAa5jtuLiGg0lFrWcywVF7Y1ed7PaD11OFcVCuLYdAEGt/rtfd9u5sFGlZjXurzNMZw1ZdGddzkazoBfIbbwFwkV6Sxg2k0lo94zNCKOqGX6HDaGXGumsR2JdyLUF6zyOOmGY4carnwwhTPpHJ2sY+XMSXrpblfCxWgvG9DtUdmeSAlakVycG5/q6bfNgstpuKcfJcOkUhQRm+L+kYkKetiyiIyXgYPVPNGHuXJTw8rOoG1vPnwgWWJTcCacvoENZoHZdQyBjrE=
  - secure: LMw3Bm82Ae/Ic7TdR6dZTB7OJI6hA1Hh/MmZsgXHacoBbRMMaLoV/iJhFSSFvytLrHKUC3YV0EfJx9YgdHXPW0wEphWRluRECUuuR26No2ZLwclnHKxCGgTR67ee6o7XR7Ro3YIlVk/K/DA5R/eFYxy2X4YjXsoyLznGurXuNO9uwGiCDwnaSIk/wz8rUd66pLJ/jryPg3BqhBZ0b2na4PxS0deH15m/3tTd5fm6ClgC6/t9bPx5IKvv4E/7oR68pREisE7ezTb3GAlVhZ1QUQcxuK3obqhHuVRwQmfav2kFPwLqNw5XG9z9BVnqygKpoGSjelTNFZIqjYwvMS2zIxzKliSByLjSU/lLiO5DcwVN2g52Whi0IoPdXnNBleSRe2CB5EjYb3dR1oXqKtN5lzfXSVh97zh1G3d1eRcVdC3EoNnnu+8H5V2Egag3eDjdH4koleI4nPU9lDCexE5pXp1qqR/qa5moZ1Yx8Hi4O/p8DfPUOZEUWgGlCBq87cc4XODJ2UkoltxRzf1ccWQXa5gHBwnJnqXLA/wCuOhjkaRxSFMbuKf58gqOtD00pdAw1qRZj0g3v5BQCeth1liyzD64MjUfaDNSvfBGIp0Qr+37FIY5ngS75HKiX47j6lqhXSUcJtZ4npwdVk5qk0rMFOiRhvdkZFPpusiDgzoDnHo=
  - secure: HS8Abzl7Dz3sAi7E2ad4mmOKWcvw5dQYuHBv+qZWP2Vhyz8svMsaHM0FCFXSRchgYlpsovlIg6TMKTFsKBmFfJaC7mhF1LYj+KBXmPFqW77fD7fvIaD3KFeKJuvmIHk7K1gkvX4ICVT50QrHbDbdpE9PIb8SQW9Lnu0XWOI1Dhy9KjbraKT4eg21L4ai1fqMHsl5DXdvi2vHUEq0dOw/t8/m9ibl6wJUxlVc0Ihzw9rbaNqC/MjV7KcSotDAJGi1e6gXv2OBl5QJ4mQynNBaWQfu4c4MAmIMYWq3oDgRFPKz6pZUHT4mAlddC7Id9VxYHr0Wybi7L43zkX3gPbO9dNfmwCpWNRBL5lYqjjy0hug8ac/E8emUCPSD6WsOWWsXgNGu1ROYoqzK1zzh8kyrPKFil3Hl7wadkdReigPxh5iihhYRPQC0mWAo7OC8+vS+CXex85BZmCltBmusp1/dpeJm735QMBG6D+f9h4YC7cbbbCH96Ccc6DEH8seFHYWk3OIjb11zO0L91+ATLGgYdWFn6nw9+pTvfioTkM60j7MGAKTGz+EsgsAFMZ0EcsHQTjLiwm+zmMIA2ANh/aaOBICHjVCo1Kc2HVBDZikI4Ra3hmlwgLjWPCJ8lbkBiYl3VTvTz3Jy51xv8sYu3rZFILykYYiozk293jjvHaMQxpY=
  - COMMIT=${TRAVIS_COMMIT::8
after_success:
  - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
  - cd che-in-che-proxy
  - export REPO=ksmster/che-in-che-proxy
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
  - docker build -f Dockerfile -t $REPO:$COMMIT .
  - docker tag $REPO:$COMMIT $REPO:$TAG
  - docker tag $REPO:$COMMIT $REPO:travis-$TRAVIS_BUILD_NUMBER
  - docker push $REPO  
  